version: '2.2'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: es01
    environment:
      # 节点名称：node.name
      - node.name=es01
      # 集群名称：cluster.name
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      # 用于在es集群初始化时选举主节点master
      - cluster.initial_master_nodes=es01,es02,es03
      # 锁定进程的物理内存地址避免交换（swapped）来提高性能：bootstrap.memory_lock=true
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es01/data:/usr/share/elasticsearch/data
      - ./es01/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./es01/logs:/usr/share/elasticsearch/logs
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "9200:9200"
    networks:
      - elastic

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      # 用于在es集群初始化时选举主节点master
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es02/data:/usr/share/elasticsearch/data
      - ./es02/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./es02/logs:/usr/share/elasticsearch/logs
      - /etc/localtime:/etc/localtime:ro
    networks:
      - elastic

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.0
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      # 用于在es集群初始化时选举主节点master
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./es03/data:/usr/share/elasticsearch/data
      - ./es03/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./es03/logs:/usr/share/elasticsearch/logs
      - /etc/localtime:/etc/localtime:ro
    networks:
      - elastic

  logstash:
    image: logstash:7.8.0
    container_name: logstash
    volumes:
      - ./logstash/config/logstash-springboot.conf:/usr/share/logstash/pipeline/logstash.conf #挂载logstash的配置文件
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml
      - /etc/localtime:/etc/localtime:ro
    links:
      - es01:es01 #可以用es01这个域名访问elasticsearch服务
      - es02:es02 #可以用es02这个域名访问elasticsearch服务
      - es03:es03 #可以用es03这个域名访问elasticsearch服务
    ports:
      - "4560:4560"
    depends_on:
      - es01 #kibana在elasticsearch启动之后再启动
      - es02 #kibana在elasticsearch启动之后再启动
      - es03 #kibana在elasticsearch启动之后再启动
    networks:
      - elastic

  kibana:
    image: kibana:7.8.0
    container_name: kibana
    environment:
      - I18N_LOCALE=zh-CN
      - XPACK_GRAPH_ENABLED=true
      - TIMELION_ENABLED=true
      - XPACK_MONITORING_COLLECTION_ENABLED="true"
      - elasticsearch.hosts=http://es01:9200 #设置访问elasticsearch的地址
    links:
      - es01:es01 #可以用es01这个域名访问elasticsearch服务
      - es02:es02 #可以用es02这个域名访问elasticsearch服务
      - es03:es03 #可以用es03这个域名访问elasticsearch服务
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "5601:5601"
    depends_on:
      - es01 #kibana在elasticsearch启动之后再启动
      - es02 #kibana在elasticsearch启动之后再启动
      - es03 #kibana在elasticsearch启动之后再启动
    networks:
      - elastic

  elasticsearch-hd:
    image: containerize/elastichd:latest
    container_name: elasticsearch-hd
    ports:
      - "9800:9800"
    depends_on:
      - es01
      - es02
      - es03
    links:
      - es01:es01 #可以用es这个域名访问elasticsearch服务
      - es03:es02 #可以用es这个域名访问elasticsearch服务
      - es03:es03 #可以用es这个域名访问elasticsearch服务
    networks:
      - elastic

networks:
  elastic:
    driver: bridge
